package YumeXi/format/base

// Values
fn debug[T : Show](T, with_loc~ : Bool = .., loc~ : SourceLoc = _) -> Unit

fn format(String, Array[&Formattable]) -> String

fn print(String, Array[&Formattable]) -> Unit

fn set_debug(enabled~ : Bool) -> Unit

fn try_format(String, Array[&Formattable]) -> String!FormatError

// Types and methods
type Align
impl Eq for Align
impl Show for Align

pub type! FormatError {
  ArgumentNotFound(String)
  UnmatchedCurlyBrace(Char)
  InvalidFormatField(String)
}
impl Show for FormatError

type FormatField
impl FormatField {
  precision(Self) -> Int?
  width(Self) -> Int
}
impl Default for FormatField
impl Eq for FormatField
impl Show for FormatField

pub struct Formatter {
  strings : Array[String]
  format_specs : Array[String]
  builder : StringBuilder
}
impl Formatter {
  format(Self, Array[&Formattable]) -> String!FormatError
  init(Self, String) -> Unit!FormatError
  new() -> Self
}
impl Show for Formatter

// Type aliases

// Traits
pub(open) trait Formattable : Show {
  format(Self, FormatField?) -> String!FormatError
}
impl Formattable::format
impl Formattable for Int
impl Formattable for Int64
impl Formattable for UInt
impl Formattable for UInt64
impl Formattable for Float
impl Formattable for Double
impl Formattable for String
impl Formattable for BigInt

